<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1422964_oferta_tabela_robocza</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1422964_oferta_tabela_robocza">zatwierdzVALCHANGES^zatwierdz=Zgoda^EQ<item display_value="-- None --" endquery="false" field="zatwierdz" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item display_value="Akceptuję" endquery="false" field="zatwierdz" goto="false" newquery="false" operator="=" or="false" value="Zgoda"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update_task_ofertowy</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
	
    // Stwórz nowy GlideRecord dla tabeli x_1422964_oferta_tabela_robocza
    var ofertaGr = new GlideRecord('x_1422964_oferta_tabela_robocza');

    // Ustawienie zapytania do znalezienia wszystkich rekordów, gdzie task_ofertowy == current.task_ofertowy
    ofertaGr.addQuery('task_ofertowy', current.task_ofertowy);
    ofertaGr.query();

    var allApproved = true;

    // Przetworzenie wyników zapytania
    while (ofertaGr.next()) {
        // Sprawdzenie, czy zatwierdz == 'Zgoda'
		
        if (ofertaGr.zatwierdz != 'Zgoda') {
		
            allApproved = false; 
            break;
        }
    }

    // Jeśli wszystkie rekordy mają zatwierdz == 'Zgoda'
    if (allApproved) {
		
        var taskOfertowyGr = new GlideRecord('x_1422964_oferta_task_ofertowy'); // Zastąp 'your_task_ofertowy_table' nazwą tabeli task_ofertowy
        if (taskOfertowyGr.get(current.task_ofertowy)) {
			
            taskOfertowyGr.setValue('state', 3); // Zmień status na 3
            taskOfertowyGr.update();
        }
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-22 15:58:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ed61d03547230210b7ea3833e16d438d</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Update_task_ofertowy</sys_name>
        <sys_overrides/>
        <sys_package display_value="Oferta" source="x_1422964_oferta">b3b240da47b6c210b7ea3833e16d43d6</sys_package>
        <sys_policy/>
        <sys_scope display_value="Oferta">b3b240da47b6c210b7ea3833e16d43d6</sys_scope>
        <sys_update_name>sys_script_ed61d03547230210b7ea3833e16d438d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-24 19:59:30</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ed61d03547230210b7ea3833e16d438d"/>
</record_update>
